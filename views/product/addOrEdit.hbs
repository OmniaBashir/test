<!DOCTYPE html>
<html>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        * {
            box-sizing: border-box;
        }

        #regForm {
            background-color: #ffffff;
            margin: 20px auto;
            padding: 10px;
            width: 70%;
            min-width: 300px;
        }

        h1 {
            text-align: center;  
        }

        input {
            padding: 8px 18px ;
            width: 100%;
        }

        /* Mark input boxes that gets an error on validation: */
        input.invalid {
            background-color: #ffdddd;
        }

        /* Hide all steps by default: */
        .tab {
            display: none;
        }

        /* Make circles that indicate the steps of the form: */
        .step {
            height: 15px;
            width: 15px;
            margin: 0 2px;
            background-color: #bbbbbb;
            border: none;  
            border-radius: 50%;
            display: inline-block;
            opacity: 0.5;
        }

        .step.active {
            opacity: 1;
        }

        /* Mark the steps that are finished and valid: */
        .step.finish {
            background-color: #17A2B8;
        }
    </style>

    <body>

        <h1>{{viewTitle}}</h1>

        <form action="/products" method="POST" autocomplete="off" id="regForm">
            <input type="hidden" name="_id" value="{{product._id}}">

            <div class=" tab">
                <p><input type="text" class="form-control" name="clientCode" placeholder="Client Code.." value="{{product.clientCode}}" oninput="this.className = ''" ></p>
                <p><input type="text" class="form-control" name="title" placeholder="Title.." value="{{product.title}}" oninput="this.className = ''" maxlength="64" minlength="10"></p>  
                <p><input type="text" class="form-control" name="brand" placeholder="Brand.." value="{{product.brand}}" oninput="this.className = ''" ></p>
                <p><input type="text" class="form-control" name="modelNumber" placeholder="Model Number.." value="{{product.brand}}" oninput="this.className = ''" ></p>
                <p><input type="text" class="form-control" name="dimensions" placeholder="Dimensions.." value="{{product.dimensions}}" oninput="this.className = ''" ></p>
                <p><input type="text" class="form-control" name="weight" placeholder="Weight.." value="{{product.weight}}" oninput="this.className = ''" ></p>
                <p><input type="text" class="form-control" name="quantity" placeholder="Quantity.." value="{{product.quantity}}" oninput="this.className = ''" ></p>  
                <p><input type="text" class="form-control" name="category" placeholder="Category.." value="{{product.category}}" oninput="this.className = ''" ></p>   
            </div>

            <div class=" tab">
                <p><input class="form-control" value="{{product.photos}}" placeholder="Photos..." oninput="this.className = ''" name="photos"></p>
                <p><input class="form-control" value="{{product.description}}" placeholder="Description..." oninput="this.className = ''" name="description" minlength="10"></p>
                <p><input class="form-control" value="{{product.location}}" placeholder="Location..." oninput="this.className = ''" name="location"></p>
            </div>

            <div class=" tab">
                <p><input class="form-control" value="{{product.listedPrice}}" placeholder="Listed Price..." oninput="this.className = ''" name="listedPrice"></p>
                <p><input class="form-control" value="{{product.sellingPrice}}" placeholder="Selling Price..." oninput="this.className = ''" name="sellingPrice"></p>
                <p><input class="form-control" value="{{product.reserve}}" placeholder="Reserve..." oninput="this.className = ''" name="reserve"></p>
            </div>
    
            <div style="overflow:auto;" >
                <div style="float:right;">
                    <button class="btn btn-secondary" type="button" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
                    <button class="btn btn-info " type="button" id="nextBtn" onclick="nextPrev(1)">Next &nbsp;</button>
                </div>

                <div>
                    <a class="btn btn-secondary" href="/products/list"><i class="fa fa-list-alt"></i>&nbsp; View All</a>
                </div>    
            </div
                
            <!-- Circles which indicates the steps of the form: -->
            <div style="text-align:center;margin-top:40px;">
                <span class="step"></span>
                <span class="step"></span>
                <span class="step"></span>
                <span class="step"></span>
            </div>

        </form>

        <script>
            var currentTab = 0; // Current tab is set to be the first tab (0)
            showTab(currentTab); // Display the current tab

            function showTab(n) {
                // This function will display the specified tab of the form...
                var x = document.getElementsByClassName("tab");
                x[n].style.display = "block";
                //... and fix the Previous/Next buttons:
                if (n == 0) {
                    document.getElementById("prevBtn").style.display = "none";
                } else {
                    document.getElementById("prevBtn").style.display = "inline";
                }
                if (n == (x.length - 1)) {
                    document.getElementById("nextBtn").innerHTML = "Submit";
                } else {
                    document.getElementById("nextBtn").innerHTML = "Next";
                }
                //... and run a function that will display the correct step indicator:
                fixStepIndicator(n)
            }

            function nextPrev(n) {
                // This function will figure out which tab to display
                var x = document.getElementsByClassName("tab");
                // Exit the function if any field in the current tab is invalid:
                if (n == 1 && !validateForm()) return false;
                // Hide the current tab:
                x[currentTab].style.display = "none";
                // Increase or decrease the current tab by 1:
                currentTab = currentTab + n;
                // if you have reached the end of the form...
                if (currentTab >= x.length) {
                    // ... the form gets submitted:
                    document.getElementById("regForm").submit();
                    return false;
                }
                // Otherwise, display the correct tab:
                showTab(currentTab);
            }

            function validateForm() {
                // This function deals with validation of the form fields
                var x, y, i, valid = true;
                x = document.getElementsByClassName("tab");
                y = x[currentTab].getElementsByTagName("input");
                // A loop that checks every input field in the current tab:
                for (i = 0; i < y.length; i++) {
                    // If a field is empty...
                    if (y[i].value == "") {
                    // add an "invalid" class to the field:
                    y[i].className += " invalid";
                    // and set the current valid status to false
                    valid = false;
                    }
                }
                // If the valid status is true, mark the step as finished and valid:
                if (valid) {
                    document.getElementsByClassName("step")[currentTab].className += " finish";
                }
                return valid; // return the valid status
            }

            function fixStepIndicator(n) {
                // This function removes the "active" class of all steps...
                var i, x = document.getElementsByClassName("step");
                for (i = 0; i < x.length; i++) {
                    x[i].className = x[i].className.replace(" active", "");
                }
                //... and adds the "active" class on the current step:
                x[n].className += " active";
            }
        </script>

    </body>
</html>